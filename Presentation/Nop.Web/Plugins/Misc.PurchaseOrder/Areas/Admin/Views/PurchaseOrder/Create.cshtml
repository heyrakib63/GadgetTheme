@model CreatePurchaseOrderModel

@{
	Layout = "_AdminLayout";
	NopHtml.SetActiveMenuItemSystemName("PurchaseOrders");
}

<div class="content-header clearfix">
	<h1 class="float-left">
		Create Purchase Order
	</h1>
	<div class="float-right">
		<button type="submit" form="create-form" class="btn btn-primary">
			<i class="fas fa-save"></i> Save Purchase Order
		</button>
	</div>
</div>

<section class="content">
	<div class="container-fluid">
		<form asp-action="Create" method="post" id="create-form">
			<input type="hidden" id="PurchaseOrderNo" name="PurchaseOrderNo" value="@Model.PurchaseOrderNo.ToString()" />
			<p> @Model.PurchaseOrderNo</p>
			<div class="card card-default">
				<div class="card-body">
					<div class="form-horizontal">

						<!-- Supplier Dropdown -->
						<div class="form-group row">
							<div class="col-md-2">
								<nop-label asp-for="@Model.SupplierId" Text="Select a Supplier" />
							</div>
							<div class="col-md-6">
								<nop-select asp-for="@Model.SupplierId" asp-items="@Model.AvailableSuppliers"/>
							</div>
							<div class="col-md-4">
								<button type="button" id="btnConfirmSupplier" class="btn btn-primary">Confirm Supplier</button>
							</div>
						</div>
					</div>
				</div>
			</div>
			
			<div class="card-body">
				<p>
					Selected Products
				</p>
				<p><strong>Debug - PurchaseOrderNo:</strong> @Model.SupplierProductSearchModel.PurchaseOrderNo</p>
				<div class="card card-default">
					<div class="card-body">

						@await Html.PartialAsync("Table", new DataTablesModel
						{
							Name = "supplierproducts-grid",
							UrlRead = new DataUrl("SupplierProductList", "PurchaseOrder", new RouteValueDictionary { [nameof(Model.SupplierProductSearchModel.PurchaseOrderNo)] = Model.SupplierProductSearchModel.PurchaseOrderNo }),
							UrlDelete = new DataUrl("SupplierProductDelete", "PurchaseOrder", null),
							UrlUpdate = new DataUrl("SupplierProductUpdate", "PurchaseOrder", null),
							Length = Model.SupplierProductSearchModel.PageSize,
							LengthMenu = Model.SupplierProductSearchModel.AvailablePageSizes,
							ColumnCollection = new List<ColumnProperty>
						{
						new ColumnProperty(nameof(SupplierProductModel.PictureUrl))
						{
							Title = T("Admin.Catalog.Products.Fields.PictureThumbnailUrl").Text,
							Width = "100",
							Render = new RenderPicture(width: 100)
						},

						new ColumnProperty(nameof(SupplierProductModel.Product2Name))
						{
						Title = "Name",
						Width = "100"

						},
						new ColumnProperty(nameof(SupplierProductModel.UnitPrice))
						{
						Title = "Unit Price",
						Width = "85",
						ClassName = NopColumnClassDefaults.CenterAll,
						Editable = true,
						EditType = EditType.Number
						},
						new ColumnProperty(nameof(SupplierProductModel.Quantity))
						{
						Title = "Quantity",
						Width = "85",
						ClassName = NopColumnClassDefaults.CenterAll,
						Editable = true,
						EditType = EditType.Number
						},
						new ColumnProperty(nameof(SupplierProductModel.TotalCost))
						{
						Title = "Total Cost",
						Width = "85",
						ClassName = NopColumnClassDefaults.CenterAll,
						Editable = true,
						EditType = EditType.Number
						},
						new ColumnProperty(nameof(SupplierProductModel.Id))
						{
						Title = T("Admin.Common.Edit").Text,
						Width = "70",
						ClassName =  NopColumnClassDefaults.Button,
						Render = new RenderButtonsInlineEdit()
						},
						new ColumnProperty(nameof(SupplierProductModel.Id))
						{
						Title = T("Admin.Common.Delete").Text,
						Width = "70",
						Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
						ClassName = NopColumnClassDefaults.Button
						}
						}
					});
					</div>

					<div class="card-footer">
						<button type="button" id="btnAddProduct" class="btn btn-primary">Add Product</button>
					</div>
				</div>
			</div>
		</form>
	</div>
</section>
<script>
	$(document).ready(function () {
		$('#btnAddProduct').click(function () {
			var supplierId = $('#SupplierId').val();
			var purchaseOrderNo = $('#PurchaseOrderNo').val();

			if (!supplierId || supplierId === "0") {
				alert('Please select a supplier first.');
				return;
			}

			var url = '/Admin/PurchaseOrder/SupplierProductAddPopup?supplierId=' + supplierId + '&purchaseOrderNo=' + purchaseOrderNo;
			window.open(url, 'Add Product', 'width=1000,height=600,resizable=yes,scrollbars=yes');
		});
	});
	function refreshSupplierProductsGrid() {
		  // use DataTables API directly
		  var table = $('#supplierproducts-grid').DataTable();
		  if (table) {
			table.ajax.reload(null, false); // false = don’t reset paging
		  }
	}
</script>

