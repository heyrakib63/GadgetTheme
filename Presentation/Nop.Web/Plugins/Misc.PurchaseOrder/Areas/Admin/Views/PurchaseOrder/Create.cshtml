@model CreatePurchaseOrderModel

@{
	Layout = "_AdminLayout";
	NopHtml.SetActiveMenuItemSystemName("PurchaseOrders");
}

<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<style>
	.select2-container--default .select2-selection--single {
		height: 35px !important;
	}
</style>
<div class="content-header clearfix">
	<h1 class="float-left">
		Create Purchase Order
	</h1>
	<div class="float-right">
		<button type="submit" form="create-form" class="btn btn-primary">
			<i class="fas fa-save"></i> Save Purchase Order
		</button>
	</div>
</div>

<section class="content">
	<div class="container-fluid">
		<form asp-action="Create" method="post" id="create-form">
			<input type="hidden" id="PurchaseOrderNo" name="PurchaseOrderNo" value="@Model.PurchaseOrderNo.ToString()" />
			<div class="card card-default">
				<div class="card-body">
					<div class="form-horizontal">

						<!-- Supplier Dropdown -->
						<div class="form-group row">
							<div class="col-md-2">
								<nop-label asp-for="@Model.SupplierId" Text="Select a Supplier" />
							</div>
							<div class="col-md-6">
								<nop-select asp-for="@Model.SupplierId" asp-items="@Model.AvailableSuppliers"/>
							</div>
							<div class="col-md-4">
								<button type="button" id="btnConfirmSupplier" class="btn btn-primary">Confirm Supplier</button>
							</div>
						</div>
					</div>
				</div>
			</div>
			
			<div class="card-body">
				<div class="card card-default">
					<div class="card-body">
						<p>
							Selected Products
						</p>

						@await Html.PartialAsync("Table", new DataTablesModel
						{
							Name = "supplierproducts-grid",
							UrlRead = new DataUrl("SupplierProductList", "PurchaseOrder", new RouteValueDictionary { [nameof(Model.SupplierProductSearchModel.PurchaseOrderNo)] = Model.SupplierProductSearchModel.PurchaseOrderNo }),
							UrlDelete = new DataUrl("SupplierProductDelete", "PurchaseOrder", null),
							UrlUpdate = new DataUrl("SupplierProductUpdate", "PurchaseOrder", null),
							Length = Model.SupplierProductSearchModel.PageSize,
							LengthMenu = Model.SupplierProductSearchModel.AvailablePageSizes,
							ColumnCollection = new List<ColumnProperty>
						{
						new ColumnProperty(nameof(SupplierProductModel.PictureUrl))
						{
							Title = T("Admin.Catalog.Products.Fields.PictureThumbnailUrl").Text,
							Width = "100",
							Render = new RenderPicture(width: 100)
						},
						new ColumnProperty(nameof(SupplierProductModel.Product2Name))
						{
							Title = "Name",
							Width = "100"
						},
						new ColumnProperty(nameof(SupplierProductModel.UnitPriceFormatted))
						{
							Title = "Unit Price",
							Width = "85"
						},
						new ColumnProperty(nameof(SupplierProductModel.Quantity))
						{
							Title = "Quantity",
							Width = "85",
							ClassName = NopColumnClassDefaults.CenterAll,
							Editable = true,
							EditType = EditType.Number
						},
						new ColumnProperty(nameof(SupplierProductModel.TotalCostFormatted))
						{
							Title = "Total Cost",
							Width = "85",
							ClassName = NopColumnClassDefaults.CenterAll
						},
						new ColumnProperty(nameof(SupplierProductModel.Id))
						{
							Title = T("Admin.Common.Edit").Text,
							Width = "70",
							ClassName =  NopColumnClassDefaults.Button,
							Render = new RenderButtonsInlineEdit()
						},
						new ColumnProperty(nameof(SupplierProductModel.Id))
						{
							Title = T("Admin.Common.Delete").Text,
							Width = "70",
							Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
							ClassName = NopColumnClassDefaults.Button
						}
						}
					})
					</div>

					<div class="card-footer">
						<button type="button" id="btnAddProduct" class="btn btn-primary">Add Product</button>
					</div>
				</div>
			</div>
		</form>
	</div>
</section>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script>
	$(document).ready(function () {
		$('#btnAddProduct').click(function () {
			var supplierId = $('#SupplierId').val();
			var purchaseOrderNo = $('#PurchaseOrderNo').val();

			if (!supplierId || supplierId === "0") {
				alert('Please select a supplier first.');
				return;
			}

			var url = '/Admin/PurchaseOrder/SupplierProductAddPopup?supplierId=' + supplierId + '&purchaseOrderNo=' + purchaseOrderNo;
			window.open(url, 'Add Product', 'width=1000,height=600,resizable=yes,scrollbars=yes');
		});
	});
	function refreshSupplierProductsGrid() {
		  // use DataTables API directly
		  var table = $('#supplierproducts-grid').DataTable();
		  if (table) {
			table.ajax.reload(null, false); // false = don’t reset paging
		  }
	}
	$(document).ready(function () {
		$('#supplierproducts-grid').on('updated.inlineedit', function (e, row, data, response) {
			if (response && response.success) {
				const rowElement = row.node();
				const $cell = $('td', rowElement).eq(4); // Index 4 = TotalCostFormatted column
				$cell.text(response.totalCostFormatted);
			}
		});
	});
	function refreshOrderTotal(purchaseOrderNo) {
		$.get('/Admin/PurchaseOrder/GetOrderTotal', { purchaseOrderNo: purchaseOrderNo }, function (response) {
			if (response.success) {
				$('#orderTotalDisplay').text(response.orderTotalFormatted);
			}
		});
	}

	$(document).ready(function () {
		const purchaseOrderNo = $('#PurchaseOrderNo').val();

		$('#supplierproducts-grid').on('updated.inlineedit', function (e, row, data, response) {
			if (response && response.success) {
				const rowElement = row.node();
				const $cell = $('td', rowElement).eq(4); // Index 4 = TotalCostFormatted column
				$cell.text(response.totalCostFormatted);

				// Refresh the overall order total
				$.get('/Admin/PurchaseOrder/GetOrderTotal', { purchaseOrderNo: purchaseOrderNo }, function (res) {
					if (res.success) {
						$('#orderTotalDisplay').text(res.orderTotalFormatted);
					}
				});
			}
		});
	});
	$(document).ready(function () {
		$('#SupplierId').select2({
			placeholder: "Select a Supplier",
			allowClear: false,
			width: 'resolve' // or '100%' to fill the column
		});
	});
	$(document).ready(function () {
		$('#btnConfirmSupplier').click(function () {
			var selectedSupplier = $('#SupplierId').val();

			if (!selectedSupplier) {
				alert("Please select a supplier before confirming.");
				return;
			}

			// Disable the select and the button
			$('#SupplierId').prop('disabled', true);
			$('#SupplierId').trigger('change.select2'); // refresh select2 UI
			$(this).prop('disabled', true);
		});
	});


</script>

